# Yakity
#
# Copyright (c) 2018 VMware, Inc. All Rights Reserved.
#
# This product is licensed to you under the Apache 2.0 license (the "License").
# You may not use this product except in compliance with the Apache 2.0 License.
#
# This product may include a number of subcomponents with separate copyright
# notices and license terms. Your use of these subcomponents is subject to the
# terms and conditions of the subcomponent's license, as noted in the LICENSE
# file.

[Unit]
Description=yakity.service

After=  network.target network-online.target \
        syslog.target rc-local.service \
        cloud-final.service

ConditionPathExists=!/var/lib/yakity/.yakity.service.done

[Install]
WantedBy=multi-user.target

[Service]
Type=oneshot
RemainAfterExit=yes
TimeoutSec=0
WorkingDirectory=/var/lib/yakity

# Create the yakity log directory.
ExecStartPre=/bin/mkdir -p /var/log/yakity

# Sysprep the host if necessary.
ExecStartPre=/bin/sh -c '/var/lib/yakity/yakity-sysprep.sh 2>&1 | tee /var/log/yakity/sysprep.log'

# Update the host name with the value from the OVF environment.
ExecStartPre=/bin/sh -c '/var/lib/yakity/yakity-hostname.sh 2>&1 | tee /var/log/yakity/hostname.log'

# This command ensures the yakity service will wait until the network
# is truly online before continuing with any of the subsequent 
# ExecStartPre commands or the ExecStart command.
ExecStartPre=/bin/sh -c "while true; do ping -c1 google.com >/dev/null && break; done"

# Create a load balancer if configured to do so.
ExecStartPre=/bin/sh -c '/var/lib/yakity/yakity-load-balancer.sh create 2>&1 | tee /var/log/yakity/load-balancer.log'

# Get information about the vSphere platform and select the cloud provider.
ExecStartPre=/bin/sh -c '/var/lib/yakity/yakity-vsphere.sh 2>&1 | tee /var/log/yakity/vsphere.log'

# Generate a self-signed CA if one is unavailable.
ExecStartPre=/bin/sh -c '/var/lib/yakity/yakity-ca.sh generate 2>&1 | tee /var/log/yakity/ca.log'

# Generate an SSH key pair if one is not available.
ExecStartPre=/bin/sh -c '/var/lib/yakity/yakity-ssh.sh 2>&1 | tee /var/log/yakity/ssh.log'

# This command generates a kubeconfig that can be used to access the cluster
# (if EXTERNAL_FQDN is set) or the control plane nodes. The kubeconfig file
# is assigned to the guestinfo property "yakity.kubeconfig".
ExecStartPre=/bin/sh -c '/var/lib/yakity/yakity-kubeconfig.sh 2>&1 | tee /var/log/yakity/kubeconfig.log'

# Create the cluster.
ExecStartPre=/bin/sh -c '/var/lib/yakity/yakity-cluster.sh 2>&1 | tee /var/log/yakity/cluster.log'

# This command checks to see if there were custom/updated versions of the
# yakity-guestinfo and yakity scripts specified in the OVF data. If there
# were then this command will download the new versions and replace the
# ones on disk prior to the commands being executed.
ExecStartPre=/bin/sh -c '/var/lib/yakity/yakity-update.sh 2>&1 | tee /var/log/yakity/update.log'

# This program reads the OVF environment for yakity configuration data
# and writes the yakity configuration file to /etc/default/yakity.
ExecStartPre=/bin/sh -c '/var/lib/yakity/yakity-guestinfo.sh 2>&1 | tee /var/log/yakity/guestinfo.log'

# The yakity script is responsible for turning up the Kubernetes cluster.
ExecStart=/bin/sh -c '/var/lib/yakity/yakity.sh 2>&1 | tee /var/log/yakity/yakity.log'

# Update the load balancer if configured to do so.
ExecStartPost=/bin/sh -c '/var/lib/yakity/yakity-load-balancer.sh connect 2>&1 | tee -a /var/log/yakity/load-balancer.log'

# This command ensures that this service is not run on subsequent boots.
ExecStartPost=/bin/touch /var/lib/yakity/.yakity.service.done

# Finally, this command moves the yakity configuration file to the
# /tmp directory so the file is cleaned up automatically the next time
# the temp space is reclaimed. This ensures the configuration file is
# still available for debugging errors, but *will* get cleaned up 
# eventually.
ExecStartPost=/bin/mv -f /etc/default/yakity /tmp/yakity.defaults
